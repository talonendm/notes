samsung 170326

Ubuntu 170326

Python:
https://docs.continuum.io/anaconda/install-linux.html

X In your browser, download the Anaconda installer for Linux.

Optional: Verify data integrity with MD5 or SHA-256. More info on hashes

Open a terminal window and type the following:

bash ~/Downloads/Anaconda3-4.3.0-Linux-x86_64.sh

NOTE: Replace ~/Downloads with your actual path and Anaconda3-4.3.0-Linux-x86_64.sh with your actual file name.

NOTE: Accept the default location or select a user-writable install location such as ~/anaconda.

NOTE: Install Anaconda as a user unless root privileges are required.

Follow the prompts on the installer screens, and if unsure about any setting, simply accept the defaults, as they can all be changed later.

NOTE: If you select the option to not add the Anaconda directory to your bash shell PATH environment variable, you may later add this line to the file .bashrc in your home directory: export PATH="/home/username/anaconda/bin:$PATH" Replace /home/username/anaconda with the actual path.

The output of a successful installation will include the messages “Installation finished.” and “Thank you for installing Anaconda!”

Close and re-open your terminal window for the changes to take effect.

When your install is complete, begin using Anaconda with the instructions iFor Linux

Anaconda is BSD licensed which gives you permission to use Anaconda commercially and for redistribution.

Changelog

    Download the installer
    Optional: Verify data integrity with MD5 or SHA-256   More info
    In your terminal window type one of the below and follow the instructions:

    Python 3.6 version

    bash Anaconda3-4.3.1-Linux-x86_64.sh 

    Python 2.7 version

    bash Anaconda2-4.3.1-Linux-x86_64.sh 

    NOTE: Include the "bash" command even if you are not using the bash shell.
n What’s next?


Download page:

X > bash ~/Downloads/Anaconda3-4.3.1-Linux-x86_64.sh



....

Do you approve the license terms? [yes|no]
>>>   yes

Anaconda3 will now be installed into this location:
/home/_______/anaconda3

  - Press ENTER to confirm the location
  - Press CTRL-C to abort the installation
  - Or specify a different location below

[/home/______/anaconda3] >>> 
PREFIX=/home/_______/anaconda3
installing: python-3.6.0-0 ...

....
creating default environment...
installation finished.
Do you wish the installer to prepend the Anaconda3 install location
to PATH in your /home/_____/.bashrc ? [yes|no]

tilttas - coypastes
export PATH="/home/______/anaconda/bin:$PATH" Replace /home/username/anaconda with the actual path.



:~/anaconda3$ cd ..
:~$ export PATH=~/anaconda3/bin:$PATH
:~$ conda --version
conda 4.3.14



https://www.digitalocean.com/community/tutorials/how-to-install-the-anaconda-python-distribution-on-ubuntu-16-04

conda create --name my3env python=3
Proceed ([y]/n)? y

openssl-1.0.2k 100% |################################################################| Time: 0:00:02   1.13 MB/s
readline-6.2-2 100% |################################################################| Time: 0:00:00   1.38 MB/s
sqlite-3.13.0- 100% |################################################################| Time: 0:00:03   1.13 MB/s
tk-8.5.18-0.ta 100% |################################################################| Time: 0:00:01   1.59 MB/s
xz-5.2.2-1.tar 100% |################################################################| Time: 0:00:01 615.03 kB/s
zlib-1.2.8-3.t 100% |################################################################| Time: 0:00:00 656.26 kB/s
python-3.6.1-0 100% |################################################################| Time: 0:00:13   1.32 MB/s
setuptools-27. 100% |################################################################| Time: 0:00:00 808.44 kB/s
wheel-0.29.0-p 100% |################################################################| Time: 0:00:00   1.01 MB/s
pip-9.0.1-py36 100% |################################################################| Time: 0:00:01   1.13 MB/s
#
# To activate this environment, use:
# > source activate my3env
#
# To deactivate this environment, use:
# > source deactivate my3env
#

:~$ source activate my3env

$ python --version
Python 3.6.1 :: Continuum Analytics, Inc.
When you’re ready to deactivate your Anaconda environment, you can do so by typing:

    source deactivate




conda install --name my3env numpy


source activate my3env




conda install anaconda-clean




installation finished.
Do you wish the installer to prepend the Anaconda3 install location
to PATH in your /home/jaakko/.bashrc ? [yes|no]
[no] >>> yes

Prepending PATH=/home/jaakko/anaconda3/bin to PATH in /home/jaakko/.bashrc
A backup will be made to: /home/jaakko/.bashrc-anaconda3.bak

o-samsung:~$ rm -rf ~/anaconda3
jaung:~$ bash ~/Downloads/Anaconda3-4.3.1-Linux-x86_64.sh


For this change to become active, you have to open a new terminal.

Thank you for installing Anaconda3!

Share your notebooks and packages on Anaconda Cloud!
Sign up for free: https://anaconda.org

~$ conda update conda
Fetching package metadata .........
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/jaakko/anaconda3:
#
conda                     4.3.14                   py36_0  
 conda update anaconda
Fetching package metadata .........
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/jaakko/anaconda3:
#
anaconda                  4.3.1               np111py36_0  




....


http://stackoverflow.com/questions/29077826/open-spyder-in-ubuntu

sudo apt-get install spyder


spyder IDE ok





PROCESSIIG



Download Processing

The first thing to do is to download Processing 3 from https://processing.org/download/. '''

[http://www.artsnova.com/processing/installing-processing-ubuntu-linux-tutorial.html]:

To get the Processing archive into the /opt directory, open a Terminal session (shortcut Ctrl+Alt+T) and type in the following command:

sudo file-roller

Yes, the executable file that is the Archive Manager program is actually named "file-roller" Note that after entering this command you will be prompted to enter the password that is associated with your user account - that's because you've used the sudo command.

As a consequence of issuing the above command, the Archive Manager window should now be open.

Use Ctrl+O to open a file selection dialog and navigate to where your Processing file (processing-3.0.2-linux64.tgz) is located and select it.

Once the file has been selected, right click on the filename and select the Extract option.

Navigate to where you want to install Processing - I click Computer and then double-click the directory named opt.

Once you're in the opt directory, click the "Extract" button. Your Processing archive will now be unpacked to a directory named Processing-3.0.2.

You are now done with the Archive Manager so go ahead and close it.

Back in your Terminal window, navigate to the directory where you just extracted Processing. For my installation I enter the following command:

cd /opt/Processing-3.0.2

Now issue the following command to list the contents of the directory:

ls -l

Start Processing by entering the following command:

./processing

sudo su -c "ln -s /opt/processing-3.0.2/processing /usr/local/bin/processing"

OMA:

Processing is installed but it is not easily accessible. The last thing I want is to have to open a Terminal session and manually type in a command every time I want to run Processing. Instead I want a desktop icon I can just click whenever I want to start Processing.

First we'll tell Ubuntu where it can find Processing. What we'll do is to add the Processing folder to Ubuntu's $PATH environment variable by creating a symbolic link. We'll do this using the following command:


sudo su -c "ln -s /opt/processing-3.3/processing /usr/local/bin/processing"



And because we're using sudo, we'll be prompted to enter our user account password.

Now, change to the applications directory using the following command:

cd /usr/share/applications/

We will now create and edit a launcher file for Unity (Unity being the graphical shell for the GNOME desktop environment developed by Canonical for Ubuntu). Start by entering the following command - which will create the file processing.desktop and simultaneously open gedit so you can edit the file:

sudo gedit /usr/share/applications/processing.desktop


[Desktop Entry]
Version=3.3
Name=Processing
Comment=Processing Rocks
Exec=processing
Icon=/opt/processing-3.3/lib/icons/pde-256.png
Terminal=false
Type=Application
Categories=AudioVideo;Video;Graphics;

HUOM! Icon path muutettu: muuten hyvät ohjeet. http://www.artsnova.com/processing/installing-processing-ubuntu-linux-tutorial.html

Now save the file and exit gedit. Note that on my system, running gedit resulted in some error messages being printed out in my Terminal session. I ignored them. Instead I just verifed that my file was created and contained the content I pasted into it by using the following command to list the file's contents:

cat processing.desktop






GIT
https://www.howtoforge.com/tutorial/install-git-and-github-on-ubuntu-14.04/

1 Installing Git for Linux

Download and install Git for Linux :

sudo apt-get install git

Reading package lists... Done
Building dependency tree       
Reading state information... Done
git is already the newest version (1:2.7.4-0ubuntu1).
git set to manually installed.
0 upgraded, 0 newly installed, 0 to remove and 122 not upgraded.


2 Configuring GitHub

Once the installation has successfully completed, the next thing to do is to set up the configuration details of the GitHub user. To do this use the following two commands by replacing "user_name" with your GitHub username and replacing "email_id" with your email-id you used to create your GitHub account.

git config --global user.name "talonendm"

git config --global user.email "talonen.dm@gmail.com"

The following image shows an example for my configuration with my "user_name" being "akshaypai" and my "email_id" being "abc123@gmail.com"




----


http://stackoverflow.com/questions/16376035/fatal-could-not-create-work-tree-dir-kivy

Your current directory does not has the write/create permission to create kivy directory, thats why occuring this problem.

Your current directory give 777 rights and try it.

sudo chmod 777 DIR_NAME
cd DIR_NAME
git clone https://github.com/mygitusername/kivy.git


and then  !   sudo chmod 777 

sudo chmod 777 talonendm
:~$ cd talonendm/
~/talonendm$ git clone https://github.com/talonendm/p5js-page.git
Cloning into 'p5js-page'...
remote: Counting objects: 95, done.
remote: Total 95 (delta 0), reused 0 (delta 0), pack-reused 95
Unpacking objects: 100% (95/95), done.
Checking connectivity... done.





R and Rstudio


https://www.r-bloggers.com/download-and-install-r-in-ubuntu/

Through Terminal

    Press Ctrl+Alt+T to open Terminal
    Then execute sudo apt-get update 
    After that, sudo apt-get install r-base

To run R statistical package, execute R in the Terminal (see the picture below).


R

works...



Rstudio:


downloads: https://www.rstudio.com/products/rstudio/download/
cd Downloads
sudo dpkg -i rstudio-1.0.136-amd64.deb 


https://www.youtube.com/watch?v=1Q6qIrNIxsE

eli

For now, with Ubuntu 16.04, you'll need to install RStudio manually from the command line:

sudo dpkg -i <path-to-RStudio.deb>  Toi siis ladattua versio paketista

After running this, the installer may note some missing dependencies -- use

sudo apt-get -f install

to ensure those get installed and are made available to RStudio.
